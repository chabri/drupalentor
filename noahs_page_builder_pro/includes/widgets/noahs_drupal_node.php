<?php 


use Drupal\noahs_page_builder\WidgetBase;

   class element_noahs_drupal_node extends WidgetBase{

      public function data(){
         return [
            'icon' => '<svg viewBox="-10 0 511 511.99958" xmlns="http://www.w3.org/2000/svg" id="fi_1070276"><path d="m487.679688 199.335938-76.441407-45.890626c.023438-.246093.035157-.496093.035157-.75v-145.136718c0-4.175782-3.382813-7.558594-7.558594-7.558594h-33.261719c-4.171875 0-7.558594 3.382812-7.558594 7.558594 0 4.175781 3.386719 7.558594 7.558594 7.558594h25.703125v129.273437l-67.59375-40.578125h34.839844c4.171875 0 7.558594-3.382812 7.558594-7.558594 0-4.175781-3.386719-7.558594-7.558594-7.558594h-58.796875c-.367188 0-.726563.035157-1.082031.085938l-28.6875-17.21875h88.5625c4.175781 0 7.558593-3.386719 7.558593-7.5625 0-4.171875-3.382812-7.558594-7.558593-7.558594h-112.882813c-.269531 0-.53125.015625-.792969.042969l-38.566406-23.152344c-3.53125-2.121093-8.257812-.9375-10.375 2.589844l-2.636719 4.394531h-76.640625c-4.171875 0-7.558594 3.382813-7.558594 7.558594v80.632812c0 4.171876 3.386719 7.558594 7.558594 7.558594h19.160156l-51.914062 86.480469v-207.429687h246.765625c4.175781 0 7.558594-3.382813 7.558594-7.558594 0-4.175782-3.382813-7.558594-7.558594-7.558594h-254.324219c-4.175781 0-7.5625 3.382812-7.5625 7.558594v240.171875l-72.050781 120.023437c-2.148437 3.578125-.988281 8.222656 2.589844 10.371094l221.222656 132.800781c1.695313 1.019531 3.804687 1.332031 5.722656.851563l88.503907-22.101563c1.921874-.480469 3.628906-1.746093 4.648437-3.445312l50.476563-84.078125h28.972656c4.175781 0 7.5625-3.386719 7.5625-7.5625v-53.296875l78.992187-131.585938c2.148438-3.582031.988281-8.222656-2.589843-10.371093zm-337.953126-78.386719h-20.660156v-65.515625h60.003906l-39.332031 65.515625c-.003906 0-.007812 0-.011719 0zm95.425782 371.738281 19.917968-33.175781 33.179688 19.917969-5.472656 1.363281zm151.003906-105.65625h-12.335938l12.335938-20.550781zm-80.960938 84.9375-48.824218-29.308594c-3.578125-2.148437-8.222656-.988281-10.371094 2.589844l-29.308594 48.824219-208.257812-125.023438 191.421875-318.867187 263.5625 158.222656zm0 0"></path><path d="m261.429688 137.574219 55.304687 33.199219c1.21875.730468 2.558594 1.078124 3.882813 1.078124 2.566406 0 5.070312-1.308593 6.488281-3.667968 2.152343-3.582032.992187-8.222656-2.589844-10.375l-55.304687-33.199219c-3.578126-2.148437-8.222657-.988281-10.371094 2.589844-2.148438 3.582031-.988282 8.226562 2.589844 10.375zm0 0"></path><path d="m344.386719 187.375 76.046875 45.648438c3.816406 2.289062 8.910156.703124 10.765625-3.335938 1.582031-3.453125.269531-7.671875-2.984375-9.625l-76.046875-45.652344c-3.578125-2.148437-8.222657-.988281-10.371094 2.589844-2.148437 3.582031-.988281 8.226562 2.589844 10.375zm0 0"></path><path d="m188.136719 150 62.21875 37.351562c1.21875.730469 2.558593 1.078126 3.882812 1.078126 2.566407 0 5.070313-1.308594 6.488281-3.667969 2.152344-3.578125.992188-8.222657-2.589843-10.371094l-62.21875-37.351563c-3.578125-2.148437-8.222657-.988281-10.371094 2.589844s-.988281 8.222656 2.589844 10.371094zm0 0"></path><path d="m403.3125 261.542969-117.523438-70.554688c-3.578124-2.148437-8.222656-.988281-10.371093 2.59375-2.148438 3.578125-.988281 8.222657 2.589843 10.371094l117.523438 70.550781c3.816406 2.289063 8.914062.703125 10.765625-3.335937 1.585937-3.453125.273437-7.671875-2.984375-9.625zm0 0"></path><path d="m382.5625 296.109375-207.394531-124.503906c-3.578125-2.148438-8.222657-.992188-10.371094 2.589843-2.148437 3.578126-.988281 8.222657 2.589844 10.371094l207.394531 124.503906c3.816406 2.289063 8.914062.703126 10.765625-3.335937 1.585937-3.457031.269531-7.671875-2.984375-9.625zm0 0"></path><path d="m361.8125 330.671875-159-95.449219c-3.582031-2.148437-8.222656-.988281-10.375 2.589844-2.148438 3.578125-.988281 8.222656 2.59375 10.371094l159 95.453125c3.816406 2.289062 8.914062.703125 10.765625-3.335938 1.585937-3.457031.269531-7.675781-2.984375-9.628906zm0 0"></path><path d="m125.886719 253.699219 124.4375 74.699219c1.21875.730468 2.558593 1.078124 3.882812 1.078124 2.566407 0 5.070313-1.308593 6.488281-3.667968 2.148438-3.578125.988282-8.222656-2.589843-10.371094l-124.4375-74.703125c-3.582031-2.148437-8.222657-.988281-10.371094 2.59375-2.148437 3.578125-.988281 8.222656 2.589844 10.371094zm0 0"></path><path d="m341.0625 365.238281-55.304688-33.199219c-3.578124-2.148437-8.222656-.992187-10.371093 2.589844-2.152344 3.578125-.992188 8.222656 2.589843 10.371094l55.304688 33.199219c3.816406 2.292969 8.914062.703125 10.765625-3.335938 1.582031-3.453125.269531-7.671875-2.984375-9.625zm0 0"></path><path d="m105.136719 288.261719 48.390625 29.050781c1.21875.734375 2.558594 1.082031 3.882812 1.082031 2.570313 0 5.074219-1.308593 6.492188-3.671875 2.148437-3.578125.988281-8.222656-2.59375-10.371094l-48.390625-29.050781c-3.578125-2.148437-8.222657-.988281-10.371094 2.589844-2.148437 3.582031-.988281 8.226563 2.589844 10.371094zm0 0"></path><path d="m320.3125 399.804688-131.347656-78.851563c-3.582032-2.148437-8.222656-.988281-10.375 2.589844-2.148438 3.578125-.988282 8.222656 2.589844 10.371093l131.351562 78.851563c3.816406 2.289063 8.910156.703125 10.765625-3.335937 1.582031-3.453126.269531-7.671876-2.984375-9.625zm0 0"></path><path d="m299.5625 434.371094-207.394531-124.503906c-3.582031-2.148438-8.222657-.988282-10.371094 2.589843s-.988281 8.222657 2.589844 10.371094l207.394531 124.503906c3.8125 2.289063 8.910156.703125 10.761719-3.335937 1.585937-3.453125.273437-7.671875-2.980469-9.625zm0 0"></path><path d="m154.375 394.234375-82.957031-49.800781c-3.582031-2.148438-8.222657-.988282-10.375 2.589844-2.148438 3.578124-.988281 8.222656 2.59375 10.371093l82.957031 49.800781c1.21875.734376 2.558594 1.082032 3.882812 1.082032 2.566407 0 5.070313-1.308594 6.488282-3.671875 2.148437-3.578125.988281-8.222657-2.589844-10.371094zm0 0"></path><path d="m230.417969 439.886719-48.390625-29.050781c-3.582032-2.148438-8.222656-.988282-10.371094 2.589843-2.152344 3.578125-.992188 8.222657 2.589844 10.371094l48.390625 29.050781c3.816406 2.289063 8.914062.703125 10.765625-3.335937 1.585937-3.453125.273437-7.671875-2.984375-9.625zm0 0"></path></svg>',
            'title' => 'Drupal Node',
            'description' => 'Node as Noahs View Display',
            'group' => 'Drupal'
         ];
      }
      
      public function render_form(){
         $form = [];


         $media_types = \Drupal::entityTypeManager()->getStorage('menu')->loadMultiple();
         $menus = [];
         $menus[] = 'Select your menu';
         foreach ($media_types as $menu_entity) {
           $menus[$menu_entity->id()] = $menu_entity->label();
         }
     

            // Section Content
            $form['section_content'] = [
               'type' => 'tab',
               'title' =>  t('Content')
            ];
            $form['group_menu'] = [
               'type' => 'group',
               'title' =>  t('Content')
            ];
            $form['menu'] = [
               'type'    => 'select',
               'title'   => t('Menu'),
               'tab' => 'section_content',
               'options' =>  $menus,
               'group' => 'group_menu'
            ];
            $form['expand_all'] = [
               'type'    => 'checkbox',
               'title'   => t('Expand All'),
               'tab' => 'section_content',
               'group' => 'group_menu'
            ];

            return $form;

      }

      public function template( $settings ){

         $settings = $settings->element;
         $output = '<ul><li><a href="">Hello</a></li><ul>';
         if(!empty($settings->menu)){
            $output = $this->render_menu_navigation('main', $settings);
         }
        
         return $output;   
      }

      private function render_menu_navigation($menu_name, $settings, $theme_alter = ''){
         //Set system menu mobile
         $menu_tree = \Drupal::menuTree();
         // Build the typical default set of menu tree parameters.
         if(!empty($settings->menu)){
            $parameters = new \Drupal\Core\Menu\MenuTreeParameters();
         }else{
            $parameters = $menu_tree->getCurrentRouteMenuTreeParameters($menu_name);
         }

         // Load the tree based on this set of parameters.
         $tree = $menu_tree->load($menu_name, $parameters);
         // Transform the tree using the manipulators you want.
         $manipulators = array(
             // Only show links that are accessible for the current user.
             array('callable' => 'menu.default_tree_manipulators:checkAccess'),
             // Use the default sorting of menu links.
             array('callable' => 'menu.default_tree_manipulators:generateIndexAndSort'),
         );
         $tree = $menu_tree->transform($tree, $manipulators);
         // Finally, build a renderable array from the transformed tree.
         $menu = $menu_tree->build($tree);

         if(!empty($theme_alter)){
            $menu['#theme'] = $theme_alter;
        }
     
         return \Drupal::service('renderer')->render($menu);
     }
     
      public function render_content($element) {
         return $this->wrapper($element, $this->template($element->settings));
      }
   }

   



